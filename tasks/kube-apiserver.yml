---
- name: Download kube-apiserver
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/v{{ k8s_version }}/bin/linux/amd64/kube-apiserver"
    checksum: "{{ k8s_kubeapiserver_checksum }}"
    dest: /usr/local/bin/kube-apiserver
    mode: 0755

- name: Create /var/lib/kube-apiserver/pki
  file:
    state: directory
    path: /var/lib/kube-apiserver/pki

- name: Install kubelet client certificate
  copy:
    src: "{{ k8s_certs_src }}/admin.crt"
    dest: "/var/lib/kube-apiserver/pki/kubelet-client.crt"
    mode: 0644
  notify:
    - Restart kubelet

- name: Install kubelet client private key
  copy:
    src: "{{ k8s_certs_src }}/admin.key"
    dest: "/var/lib/kube-apiserver/pki/kubelet-client.key"
    mode: 0600
  notify:
    - Restart kubelet

- name: Install kube-apiserver systemd configuration
  template:
    src: systemd/kube-apiserver.j2
    dest: /etc/systemd/system/kube-apiserver.service
    owner: root
    group: root
    mode: 0664
  notify:
  - Reload systemd daemon
  - Restart kube-apiserver

- name: Allow apiserver traffic internally
  ufw: rule=allow port=6443 proto=tcp src={{ k8s_internal_subnet }}
  with_items: "{{ groups['k8s-master'] }}"

- name: Ensure kube-apiserver is started at boot
  service: name=kube-apiserver daemon_reload=yes state=started enabled=yes
