- name: Install CA key
  copy:
    src: "{{ k8s_pki_dir }}/ca.key"
    dest: "/etc/kubernetes/pki/ca.key"
    mode: 0600

- name: Install CA certificate
  copy:
    src: "{{ k8s_pki_dir }}/ca.crt"
    dest: "/etc/kubernetes/pki/ca.crt"
    mode: 0644

- name: Generate apiserver key
  command: openssl genrsa -out apiserver.key 2048
  args:
    chdir: /etc/kubernetes/pki
    creates: /etc/kubernetes/pki/apiserver.key

- name: Create apiserver openssl config file
  template:
    src: openssl-apiserver.j2
    dest: /etc/kubernetes/pki/apiserver.conf
    owner: root
    group: root
    mode: 0644
  register: openssl_apiserver

- name: Generate apiserver certificate
  shell: |
    openssl req -new -key apiserver.key -out apiserver.csr -subj "/CN=kube-apiserver" -config apiserver.conf;
    openssl x509 -req -in apiserver.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out apiserver.crt -days 3650 -extensions v3_req -extfile apiserver.conf;
    rm -f apiserver.csr;
  args:
    chdir: /etc/kubernetes/pki
  when: openssl_apiserver|changed

- name: Generate client key
  command: openssl genrsa -out client.key 2048
  args:
    chdir: /etc/kubernetes/pki
    creates: "/etc/kubernetes/pki/client.key"

- name: Generate client certificate
  shell: |
    openssl req -new -key client.key -out client.csr -subj "/CN=kubernetes";
    openssl x509 -req -in client.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out client.crt -days 3650;
    rm -f client.csr;
  args:
    chdir: /etc/kubernetes/pki
    creates: "/etc/kubernetes/pki/client.crt"


- name: Generate service account key
  command: openssl genrsa -out sa.key 2048
  args:
    chdir: /etc/kubernetes/pki
    creates: "/etc/kubernetes/pki/sa.key"

- name: Create kubeconfigs
  shell: |
    set -e;
    openssl genrsa -out {{ item.name }}.key 2048;
    openssl req -new -key {{ item.name }}.key -out {{ item.name }}.csr -subj "/CN={{ item.user }}{% if item.organization is defined %}/O={{ item.organization }}{% endif %}";
    openssl x509 -req -in {{ item.name }}.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out {{ item.name }}.crt -days 3650;

    kubectl config set-cluster kubernetes \
      --certificate-authority=ca.crt \
      --embed-certs=true \
      --server=https://{{ k8s_advertise_ip }}:6443 \
      --kubeconfig=/etc/kubernetes/{{ item.name }}.conf;

    kubectl config set-credentials {{ item.user }} \
      --client-certificate={{ item.name }}.crt \
      --client-key={{ item.name }}.key \
      --embed-certs=true \
      --kubeconfig=/etc/kubernetes/{{ item.name }}.conf;

    kubectl config set-context default \
      --cluster=kubernetes \
      --user={{ item.user }} \
      --kubeconfig=/etc/kubernetes/{{ item.name }}.conf;

    kubectl config use-context default --kubeconfig=/etc/kubernetes/{{ item.name }}.conf;

    rm -f {{ item.name }}.csr {{ item.name }}.crt {{ item.name }}.key;
  args:
    chdir: /etc/kubernetes/pki
    creates: "/etc/kubernetes/{{ item.name }}.conf"
  with_items:
  - {name: admin, user: "kubernetes-admin", organization: "system:masters"}
  - {name: kubelet, user: "system:node:{{ ansible_hostname }}", organization: "system:nodes"}
  - {name: scheduler, user: "system:kube-scheduler"}
  - {name: controller-manager, user: "system:kube-controller-manager"}